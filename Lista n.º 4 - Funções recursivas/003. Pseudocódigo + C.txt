+----------------+
|  PSEUDOCÓDIGO  |
+----------------+

// FUNÇÃO potência em RECURSIVIDADE

ALGORÍTIMO potencia

FUNÇÃO potencia (REAL: x, INTEIRO: n)
INÍCIO
	SE n == 0
	ENTÃO
		RETORNE 1;
	SENÃO
		RETORNE x * potencia(x, n - 1);
FIM.

// ALGORÍTIMO principal

INÍCIO
	VAR REAL: base, resultado; // VARIÁVEIS LOCAIS
	INTEIRO: expoente;

	ESCREVA ("Informe a base: ");
	LEIA base;

	ESCREVA ("A base será elevada a quanto? ");
	LEIA expoente;

	SE base == 0 .E. expoente == 0
	ENTÃO
		ESCREVA("0 elevado a 0 é uma indeterminação.");
	SENÃO
		resultado = potencia(base, expoente);
    		ESCREVA(base, " elevado a ", expoente, " é: ", resultado);
FIM.

+---------------+
|       C       |
+---------------+

#include <stdio.h>
#include <locale.h>
#include <conio.h>
#include <math.h>

float potencia(float x, int n){
    if(n == 0){
        return 1;
    }else
        return x * potencia(x, n - 1);
}

main(){
	setlocale(LC_ALL, "Portuguese");
	float base, resultado;
	int expoente;

	printf("Informe a base: ");
	scanf("%f", &base);

	printf("A base será elevada a quanto? ");
	scanf("%d", &expoente);

	if(base == 0 && expoente == 0){
        	printf("0 elevado a 0 é uma indeterminação.");
   	}else {
        	resultado = potencia(base, expoente);
        	printf("%.0f elevado a %d é: %.1f", base, expoente, resultado);
    }
}










	

	
	

